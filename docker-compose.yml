version: "2"
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /etc/nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    network_mode: bridge

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx-proxy
    environment:
      - DEFAULT_EMAIL=ole.sen@gmx.de
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    network_mode: bridge

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
      args:
        - REACT_APP_SIGNAL_URL=${WEBSOCKET_URL}
        - REACT_APP_SIGNAL_PORT=${WEBSOCKET_URL}
        - REACT_APP_SPACES_URL=${SPACES_URL}
        - REACT_APP_AUTH_URL=${AUTH_URL}
    environment:
      - VIRTUAL_HOST=${FRONTEND_URL}
#      - VIRTUAL_HOST=www.chat.alphabibber.com
      - LETSENCRYPT_HOST=${FRONTEND_URL}
#      - LETSENCRYPT_HOST=www.chat.alphabibber.com
    network_mode: bridge

  nginx-landingpage:
    build:
      context: ./landingpage
      dockerfile: ./Dockerfile
    environment:
        - VIRTUAL_HOST=${LANDINGPAGE_URL}
        - LETSENCRYPT_HOST=${LANDINGPAGE_URL}
    network_mode: bridge

  auth-service:
    build:
      context: ./auth-service
      dockerfile: ./Dockerfile
      args:
        - VIRTUAL_PORT=${AUTH_PORT}
    environment:
      - VIRTUAL_HOST=${AUTH_URL}
      - LETSENCRYPT_HOST=${AUTH_URL}
      - VIRTUAL_PORT=${AUTH_PORT}
      - OAUTH_GOOGLE_CLIENT_ID=${OAUTH_GOOGLE_CLIENT_ID}
      - OAUTH_GOOGLE_CLIENT_SECRET=${OAUTH_GOOGLE_CLIENT_SECRET}
    network_mode: bridge

  websocket-service:
    build:
      context: ./websocket-service
      dockerfile: ./Dockerfile
      args:
        - SPACES_URL=${SPACES_URL}
        - VIRTUAL_PORT=${WEBSOCKET_PORT}
    environment:
      - LETSENCRYPT_HOST=${WEBSOCKET_URL}
      - VIRTUAL_PORT=${WEBSOCKET_PORT}
      - VIRTUAL_HOST=${WEBSOCKET_URL}
    network_mode: bridge

  spaces-service:
    build:
      context: ./spaces-service
      dockerfile: ./Dockerfile
      args:
        - VIRTUAL_PORT=${SPACES_PORT}
    environment:
      - VIRTUAL_HOST=${SPACES_URL}
      - LETSENCRYPT_HOST=${SPACES_URL}
      - VIRTUAL_PORT=${SPACES_PORT}
    network_mode: bridge

  nginx-presentation:
    build:
      context: ./presentation
      dockerfile: ./Dockerfile
    environment:
#      - VIRTUAL_HOST=presentation.alphabibber.com
#      - LETSENCRYPT_HOST=presentation.alphabibber.com
      - VIRTUAL_HOST=${PRESENTATION_URL}
      - LETSENCRYPT_HOST=${PRESENTATION_URL}
    network_mode: bridge

  keycloak-postgres:
    image: postgres
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}

  keycloak:
    image: jboss/keycloak
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=keycloak-postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}
      - VIRTUAL_HOST=${KEYCLOAK_URL}
      - LETSENCRYPT_HOST=${KEYCLOAK_URL}
      - VIRTUAL_PORT=${KEYCLOAK_PORT}
    depends_on:
      - keycloak-postgres

volumes:
  certs: { }
  vhost: { }
  html: { }
  keycloak_postgres_data: { }

networks:
  keycloak:
