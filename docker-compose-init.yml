version: "2"
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /etc/nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /home/git_environment/NotZoom/keycloak/Prometheus/prometheus.txt:etc/nginx/vhost.d/${PROMETHEUS_URL}
      - /etc/.htpasswd:/etc/.htpasswd
    networks:
      - application

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx-proxy
    environment:
      - DEFAULT_EMAIL=ole.sen@gmx.de
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - application

  keycloak-postgres:
    image: postgres
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
    networks:
      - application

  keycloak:
    image: jboss/keycloak
#    image: wizzn/keycloak:12
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=keycloak-postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}
      - VIRTUAL_HOST=${KEYCLOAK_URL}
      - LETSENCRYPT_HOST=${KEYCLOAK_URL}
      - PROXY_ADDRESS_FORWARDING=true
      - VIRTUAL_PORT=${KEYCLOAK_PORT}
    volumes:
      - ./frontend/login-theme:/opt/jboss/keycloak/themes/login
    networks:
      - application
    depends_on:
      - keycloak-postgres

  spaces-postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=${SPACES_DB_PASSWORD}
      - POSTGRES_DB=db
      - POSTGRES_USER=admin
    volumes:
      - spaces_postgres_data:/var/lib/postgresql/data
    networks:
      - application

volumes:
  certs: { }
  vhost: { }
  html: { }
  keycloak_postgres_data: { }
  spaces_postgres_data: { }

networks:
  application:
    driver: bridge
