# This is a basic workflow to help you get started with Actions

name: init_server_dev

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Create env file
        run: |
            touch .env
            echo HOMEPAGE_URL=www.alpahbibber.com >> .env
            echo FRONTEND_URL=app.alpahbibber.com >> .env
            echo SIGNAL_URL=signal.alpahbibber.com >> .env
            echo SPACES_URL=spaces.alpahbibber.com >> .env
            echo PRESENTATION_URL=presentation.alpahbibber.com >> .env
            echo WEBSOCKET_URL=websocket.alpahbibber.com >> .env
            echo ACCOUNT_URL=account.alpahbibber.com >> .env
            echo KEYCLOAK_URL=auth.alpahbibber.com >> .env
            echo GRAFANA_URL=statistics.alphabibber.com >> .env
            echo PROMETHEUS_URL=prometheus.alphabibber.com >> .env
            echo POSTHOG_URL=posthog.alphabibber.com >> .env
            echo WIKI_URL=support.alpahbibber.com >> .env
            echo KEYCLOAK_REALM=Application >> .env
            echo KEYCLOAK_FRONTEND_CLIENT=frontend >> .env
            echo FRONTEND_PORT=80 >> .env
            echo SIGNAL_PORT=6503 >> .env
            echo SPACES_PORT=8081 >> .env
            echo WEBSOCKET_PORT=8085 >> .env
            echo KEYCLOAK_PORT=8080 >> .env
            echo ACCOUNT_PORT=8082 >> .env
            echo GRAFANA_PORT=3000 >> .env
            echo PROMETHEUS_PORT=9090 >> .env
            echo POSTHOG_PORT=8000 >> .env
            cat .env
            
      - name: pull from git
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo git checkout Yacht.Chat_2.0
            sudo git pull
          host: ${{ secrets.HOST_DEV}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: start all init docker container
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |            
            echo "HOMEPAGE_URL=www.alpahbibber.com" >> $GITHUB_ENV
            echo "FRONTEND_URL=app.alpahbibber.com" >> $GITHUB_ENV
            echo "SIGNAL_URL=signal.alpahbibber.com" >> $GITHUB_ENV
            echo "SPACES_URL=spaces.alpahbibber.com" >> $GITHUB_ENV
            echo "PRESENTATION_URL=presentation.alpahbibber.com" >> $GITHUB_ENV
            echo "WEBSOCKET_URL=websocket.alpahbibber.com" >> $GITHUB_ENV
            echo "ACCOUNT_URL=account.alpahbibber.com" >> $GITHUB_ENV
            echo "KEYCLOAK_URL=auth.alpahbibber.com" >> $GITHUB_ENV
            echo "GRAFANA_URL=statistics.alphabibber.com" >> $GITHUB_ENV
            echo "PROMETHEUS_URL=prometheus.alphabibber.com" >> $GITHUB_ENV
            echo "POSTHOG_URL=posthog.alphabibber.com" >> $GITHUB_ENV
            echo "WIKI_URL=support.alpahbibber.com" >> $GITHUB_ENV
            echo "KEYCLOAK_REALM=Application" >> $GITHUB_ENV
            echo "KEYCLOAK_FRONTEND_CLIENT=frontend" >> $GITHUB_ENV
            echo "FRONTEND_PORT=80" >> $GITHUB_ENV
            echo "SIGNAL_PORT=6503" >> $GITHUB_ENV
            echo "SPACES_PORT=8081" >> $GITHUB_ENV
            echo "WEBSOCKET_PORT=8085" >> $GITHUB_ENV
            echo "KEYCLOAK_PORT=8080" >> $GITHUB_ENV
            echo "ACCOUNT_PORT=8082" >> $GITHUB_ENV
            echo "GRAFANA_PORT=3000" >> $GITHUB_ENV
            echo "PROMETHEUS_PORT=9090" >> $GITHUB_ENV
            echo "POSTHOG_PORT=8000" >> $GITHUB_ENV
            
            sudo docker network create -d bridge application
            sudo docker volume create certs
            sudo docker volume create vhost
            sudo docker volume create html
            sudo docker volume create keycloak_postgres_data
            sudo docker volume create spaces_postgres_data
            sudo docker volume create prometheus
            
            cd /home/git_environment/NotZoom/
            sudo SPACES_DB_PASSWORD=${{ secrets.SPACES_DB_PASSWORD}} KEYCLOAK_PASSWORD=${{ secrets.KEYCLOAK_PASSWORD}} KEYCLOAK_DB_PASSWORD=${{ secrets.KEYCLOAK_DB_PASSWORD}} docker-compose -f docker-compose-init.yml -f docker-compose-statistics.yml up -d
            sudo mvn clean -f ./spaces-service/pom.xml package -DskipTests
            sudo mvn clean -f ./websocket-service/pom.xml package -DskipTests
            sudo mvn clean -f ./account-service/pom.xml package -DskipTests
            sudo KEYCLOAK_ACCOUNTSERVICE_PASSWORD=${{ secrets.KEYCLOAK_ACCOUNTSERVICE_PASSWORD}} KEYCLOAK_CLIENT_SECRET_ACCOUNT_SERVICE=${{ secrets.KEYCLOAK_CLIENT_SECRET_ACCOUNT_SERVICE}} KEYCLOAK_PASSWORD=${{ secrets.KEYCLOAK_PASSWORD}} KEYCLOAK_CLIENT_SECRET_ACCOUNT_SERVICE=${{ secrets.KEYCLOAK_CLIENT_SECRET_ACCOUNT_SERVICE}} SPACES_DB_PASSWORD=${{ secrets.SPACES_DB_PASSWORD}} KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET}} JWT_SECRET=${{ secrets.SPACES_JWT_SECRET}} docker-compose build
            sudo KEYCLOAK_ACCOUNTSERVICE_PASSWORD=${{ secrets.KEYCLOAK_ACCOUNTSERVICE_PASSWORD}} KEYCLOAK_CLIENT_SECRET_ACCOUNT_SERVICE=${{ secrets.KEYCLOAK_CLIENT_SECRET_ACCOUNT_SERVICE}} KEYCLOAK_PASSWORD=${{ secrets.KEYCLOAK_PASSWORD}} KEYCLOAK_CLIENT_SECRET_ACCOUNT_SERVICE=${{ secrets.KEYCLOAK_CLIENT_SECRET_ACCOUNT_SERVICE}} SPACES_DB_PASSWORD=${{ secrets.SPACES_DB_PASSWORD}} KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET}} JWT_SECRET=${{ secrets.SPACES_JWT_SECRET}} docker-compose up -d
          host: ${{ secrets.HOST_DEV}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}
