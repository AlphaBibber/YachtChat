# This is a basic workflow to help you get started with Actions

name: update_server_dev

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: #[ main ]
      - Yacht.Chat_2.0

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      HOMEPAGE_URL=www.alpahbibber.com
      FRONTEND_URL=app.alpahbibber.com
      SIGNAL_URL=signal.alpahbibber.com
      SPACES_URL=spaces.alpahbibber.com
      PRESENTATION_URL=presentation.alpahbibber.com
      WEBSOCKET_URL=websocket.alpahbibber.com
      ACCOUNT_URL=account.alpahbibber.com
      KEYCLOAK_URL=auth.alpahbibber.com
      WIKI_URL=support.alpahbibber.com

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'csv'
      - run: |
          echo "Get changes: done"

      - name: pull from git
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo git pull
          host: ${{ secrets.HOST_DEV}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: print all changed files
        run: |
          echo ${{ steps.files.outputs.added_modified }}

      - name: build frontend when changed
        if: contains(env.TEST_STATEMENT, 'frontend/')
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo docker-compose build frontend
            sudo docker-compose down frontend
            sudo docker-compose up --no-deps -d frontend
          host: ${{ secrets.HOST_DEV}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}
        env:
          TEST_STATEMENT: ${{ steps.files.outputs.added_modified }}
          
      - name: build homepage when changed
        if: contains(env.TEST_STATEMENT, 'homepage/')
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo docker-compose build homepage
            sudo docker-compose down homepage
            sudo docker-compose up --no-deps -d homepage
          host: ${{ secrets.HOST_DEV}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}
        env:
          TEST_STATEMENT: ${{ steps.files.outputs.added_modified }}

      - name: build wiki when changed
          if: contains(env.TEST_STATEMENT, 'wiki/')
          uses: tarunjangra/ssh-remote-cmd@v1
          with:
            command: |
              cd /home/git_environment/NotZoom/
              sudo docker-compose build wiki
              sudo docker-compose down wiki
              sudo docker-compose up --no-deps -d wiki
            host: ${{ secrets.HOST_DEV}}
            user: ${{ secrets.USERNAME}}
            key: ${{ secrets.KEY}}
          env:
            TEST_STATEMENT: ${{ steps.files.outputs.added_modified }}

      - name: build spaces-service when changed
        if: contains(env.TEST_STATEMENT, 'spaces-service/')
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo mvn clean -f ./spaces-service/pom.xml package -DskipTests
            sudo SPACES_DB_PASSWORD=${{ secrets.SPACES_DB_PASSWORD}} KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET}} JWT_SECRET=${{ secrets.SPACES_JWT_SECRET}} docker-compose build spaces-service
            sudo docker-compose down spaces-service
            sudo SPACES_DB_PASSWORD=${{ secrets.SPACES_DB_PASSWORD}} KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET}} JWT_SECRET=${{ secrets.SPACES_JWT_SECRET}} docker-compose up --no-deps -d spaces-service
          host: ${{ secrets.HOST_DEV}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}
        env:
          TEST_STATEMENT: ${{ steps.files.outputs.added_modified }}

      - name: build websocket-service when changed
        if: contains(env.TEST_STATEMENT, 'websocket-service/')
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo mvn clean -f ./websocket-service/pom.xml package -DskipTests
            sudo docker-compose build websocket-service
            sudo docker-compose down websocket-service
            sudo docker-compose up --no-deps -d websocket-service
          host: ${{ secrets.HOST_DEV}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}
        env:
          TEST_STATEMENT: ${{ steps.files.outputs.added_modified }}

      - name: build account-servie when changed
        if: contains(env.TEST_STATEMENT, 'account-service/')
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo mvn clean -f ./account-service/pom.xml package -DskipTests
            sudo docker-compose build account-service
            sudo docker-compose down account-service
            sudo KEYCLOAK_ACCOUNTSERVICE_PASSWORD=${{ secrets.KEYCLOAK_ACCOUNTSERVICE_PASSWORD}} KEYCLOAK_CLIENT_SECRET_ACCOUNT_SERVICE=${{ secrets.KEYCLOAK_CLIENT_SECRET_ACCOUNT_SERVICE}} docker-compose up --no-deps -d account-service
          host: ${{ secrets.HOST_DEV}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}
        env:
          TEST_STATEMENT: ${{ steps.files.outputs.added_modified }}

      - name: delete the old images
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            sudo docker system prune --all --force
          host: ${{ secrets.HOST_DEV}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}
