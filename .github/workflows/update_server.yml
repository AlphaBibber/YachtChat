# This is a basic workflow to help you get started with Actions

name: update_server

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v5.5
        id: changed_files
        with:
          files: |
            auth-service
            frontend
            landingpage
            presentation
            spaces-service
            websocket-service
      - name: pull from git
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo git pull
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: start all init docker container
        if: ${INIT_NEW_SERVER}
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo KEYCLOAK_PASSWORD=${{ secrets.KEYCLOAK_PASSWORD}} KEYCLOAK_DB_PASSWORD=${{ secrets.KEYCLOAK_DB_PASSWORD}} docker-compose -f docker-compose-init.yml up --no-deps -d
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: build frontend when changed
        if: contains(steps.changed_files.outputs.changed_files, 'frontend') || ${INIT_NEW_SERVER}
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo docker-compose down frontend
            sudo docker-compose build frontend
            sudo docker-compose up --no-deps -d frontend
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: build auth-service when changed
        if: contains(steps.changed_files.outputs.changed_files, 'auth-service') || ${INIT_NEW_SERVER}
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo mvn clean -f ./auth-service/pom.xml package -DskipTests
            sudo docker-compose down auth-service
            sudo docker-compose build auth-service
            sudo OAUTH_GOOGLE_CLIENT_ID=${{ secrets.OAUTH_GOOGLE_CLIENT_ID}} OAUTH_GOOGLE_CLIENT_SECRET=${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET}} docker-compose up --no-deps -d auth-service
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: build landingpage when changed
        if: contains(steps.changed_files.outputs.changed_files, 'landingpage') || ${INIT_NEW_SERVER}
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo docker-compose down nginx-landingpage
            sudo docker-compose build nginx-landingpage
            sudo docker-compose up --no-deps -d nginx-landingpage
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: build presentation when changed
        if: contains(steps.changed_files.outputs.changed_files, 'presentation') || ${INIT_NEW_SERVER}
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo docker-compose down nginx-presentation
            sudo docker-compose build nginx-presentation
            sudo docker-compose up --no-deps -d nginx-presentation
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: build spaces-service when changed
        if: contains(steps.changed_files.outputs.changed_files, 'spaces-service') || ${INIT_NEW_SERVER}
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo mvn clean -f ./spaces-service/pom.xml package -DskipTests
            sudo docker-compose down spaces-service
            sudo docker-compose build spaces-service
            sudo docker-compose up --no-deps -d spaces-service
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: build websocket-service when changed
        if: contains(steps.changed_files.outputs.changed_files, 'websocket-service') || ${INIT_NEW_SERVER}
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo mvn clean -f ./websocket-service/pom.xml package -DskipTests
            sudo docker-compose down websocket-service
            sudo docker-compose build websocket-service
            sudo docker-compose up --no-deps -d websocket-service
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: delete the old images
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            sudo docker system prune --all --force
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}