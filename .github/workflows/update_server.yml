# This is a basic workflow to help you get started with Actions

name: update_server

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: #[ main ]
      - main
      - devops/fixchangedfiles

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
#      - id: files
#        uses: jitterbit/get-changed-files@v1
#        with:
#          format: 'csv'
#      - run: |
#          mapfile -d ',' -t added_modified_files < <(printf '%s,' '${{ steps.files.outputs.added_modified }}')
#          for added_modified_file in "${added_modified_files[@]}"; do
#            echo "Do something with this ${added_modified_file}."
#
#          done

      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'csv'
      - run: |
          mapfile -d ',' -t added_modified_files < <(printf '%s,' '${{ steps.files.outputs.added_modified }}')
          for added_modified_file in "${added_modified_files[@]}"; do
            echo CHANGED_FILES=env.CHANGED_FILES,${added_modified_file} >> $GITHUB_ENV
          done

      - name: pull from git
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo git pull
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: test if condition
        if: contains(env.CHANGED_FILES, '.github')
        run: |
          echo env.CHANGED_FILES

      - name: build frontend when changed
        if: contains(steps.changed_files.outputs.changed_files, 'frontend')
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo docker-compose down frontend
            sudo docker-compose build frontend
            sudo docker-compose up --no-deps -d frontend
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: build landingpage when changed
        if: contains(steps.changed_files.outputs.changed_files, 'landingpage')
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo docker-compose down nginx-landingpage
            sudo docker-compose build nginx-landingpage
            sudo docker-compose up --no-deps -d nginx-landingpage
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: build presentation when changed
        if: contains(steps.changed_files.outputs.changed_files, 'presentation')
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo docker-compose down nginx-presentation
            sudo docker-compose build nginx-presentation
            sudo docker-compose up --no-deps -d nginx-presentation
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: build spaces-service when changed
        if: contains(steps.changed_files.outputs.changed_files, 'spaces-service')
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo mvn clean -f ./spaces-service/pom.xml package -DskipTests
            sudo docker-compose down spaces-service
            sudo docker-compose build spaces-service
            sudo docker-compose up --no-deps -d spaces-service
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: build websocket-service when changed
        if: contains(steps.changed_files.outputs.changed_files, 'websocket-service')
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo mvn clean -f ./websocket-service/pom.xml package -DskipTests
            sudo docker-compose down websocket-service
            sudo docker-compose build websocket-service
            sudo docker-compose up --no-deps -d websocket-service
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}

      - name: delete the old images
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            sudo docker system prune --all --force
          host: ${{ secrets.HOST}}
          user: ${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}