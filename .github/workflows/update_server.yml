# This is a basic workflow to help you get started with Actions

name: update_server

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: connect via ssh and deploy services
        uses: tarunjangra/ssh-remote-cmd@v1
        with:
          command: |
            cd /home/git_environment/NotZoom/
            sudo git pull
            sudo export OAUTH_GOOGLE_CLIENT_ID=${{ secrets.OAUTH_GOOGLE_CLIENT_ID}}
            sudo export OAUTH_GOOGLE_CLIENT_SECRET=${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET}}
            sudo mvn clean -f ./spaces-service/pom.xml package -DskipTests
            sudo mvn clean -f ./websocket-service/pom.xml package -DskipTests
            sudo mvn clean -f ./auth-service/pom.xml package -DskipTests
            sudo docker-compose down frontend spaces-service nginx-presentation websocket-service auth-service keycloak-postgres keycloak
            sudo OAUTH_GOOGLE_CLIENT_ID=${{ secrets.OAUTH_GOOGLE_CLIENT_ID}} OAUTH_GOOGLE_CLIENT_SECRET=${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET}} docker-compose build frontend spaces-service nginx-presentation websocket-service auth-service
            sudo OAUTH_GOOGLE_CLIENT_ID=${{ secrets.OAUTH_GOOGLE_CLIENT_ID}} OAUTH_GOOGLE_CLIENT_SECRET=${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET}} KEYCLOAK_PASSWORD=${{ secrets.KEYCLOAK_PASSWORD }} KEYCLOAK_DB_PASSWORD=${{ secrets.KEYCLOAK_DB_PASSWORD }} docker-compose up --no-deps -d frontend spaces-service nginx-presentation websocket-service auth-service keycloak-postgres keycloak
            sudo docker system prune --all --force
          host: www.alphabibber.com #${{ secrets.HOST}}
          user: danilo_walenta #${{ secrets.USERNAME}}
          key: ${{ secrets.KEY}}
