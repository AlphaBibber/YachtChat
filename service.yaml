apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend-app
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
---
#apiVersion: v1
#kind: Service
#metadata:
#  name: landingpage-service
#spec:
#  selector:
#    app: landingpage-app
#  type: NodePort
#  ports:
#    - port: 80
#      targetPort: ${{LANDINGPAGE_PORT}}
#      protocol: TCP
#      name: http
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: presentation-service
#spec:
#  selector:
#    app: presentation-app
#  type: NodePort
#  ports:
#    - port: 80
#      targetPort: ${{PRESENTATION_PORT}}
#      protocol: TCP
#      name: http
#---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: websocket-app
  name: websocket-service
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80":"service-backend-config","8085":"http-hc-config"}}'
    cloud.google.com/neg: '{"ingress": true}'
spec:
  selector:
    app: websocket-app
  type: NodePort
  ports:
    - port: 80
      targetPort: 8085
---
apiVersion: v1
kind: Service
metadata:
  name: spacesservice-service
  annotations:
    cloud.google.com/backend-config: '{"ports": {"8081":"http-hc-config"}}'
    cloud.google.com/neg: '{"ingress": true}'
spec:
  selector:
    app: spacesservice-app
  type: NodePort
  ports:
    - port: 80
      targetPort: 8081
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: service-backend-config
spec:
  timeoutSec: 28800
  connectionDraining:
    drainingTimeoutSec: 1800
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: http-hc-config
spec:
  healthCheck:
    checkIntervalSec: 15
    port: 80
    type: HTTP
    requestPath: /actuator/health
